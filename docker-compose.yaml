version: "3.9"
services:
  nginx:
    container_name: "nginx"
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - web
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/app/src
    depends_on:
      - db
        # conditiorn: service_healthy
        # restart: true
      - redis
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: "2"
          memory: "1000M"
    expose:
      - "5500"
    logging:
      driver: "json-file"
  redis:
    image: redis:7.2
    restart: always
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/var/lib/redis
      - ./data/redis-config:/usr/local/etc/redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
  db:
    image: postgres:15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d test_db -h localhost -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:8080"
    depends_on:
      - db
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=sanghun
      - RABBITMQ_DEFAULT_PASS=sanghun
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always
    ports:
      - "3001:3001"
